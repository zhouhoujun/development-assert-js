{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;AAAA,gCAAgC;AAChC,qDAAuG;AACvG,kCAAkC;AAClC,IAAM,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACrC,IAAM,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC9C,IAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACtC,IAAM,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AA8BpC;IAAA;IA2BA,CAAC;IA1BG,uBAAK,GAAL;QACI,MAAM,CAAC;YACH;gBACI,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,4BAAS,CAAC,KAAK;gBACrB,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE;oBACH,cAAM,OAAA,KAAK,CAAC,YAAY,CAAC,EAAnB,CAAmB;oBACzB,cAAM,OAAA,UAAU,CAAC,IAAI,EAAE,EAAjB,CAAiB;oBACvB,UAAC,MAAM,IAAK,OAAA,KAAK,CAAiB,MAAM,CAAC,MAAO,CAAC,WAAW,IAAI,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAA5E,CAA4E;oBACxF,UAAC,MAAM,IAAK,OAAA,UAAU,CAAC,KAAK,CAAiB,MAAM,CAAC,MAAO,CAAC,UAAU,IAAI,cAAc,CAAC,EAA7E,CAA6E;iBAC5F;aACJ;YACD;gBACI,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,4BAAS,CAAC,OAAO,GAAG,4BAAS,CAAC,MAAM;gBAC1C,KAAK,EAAE;oBACH,cAAM,OAAA,KAAK,CAAC,YAAY,CAAC,EAAnB,CAAmB;oBACzB,cAAM,OAAA,UAAU,CAAC,IAAI,EAAE,EAAjB,CAAiB;oBACvB,UAAC,MAAM,IAAK,OAAA,KAAK,CAAiB,MAAM,CAAC,MAAO,CAAC,WAAW,IAAI,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAA5E,CAA4E;oBACxF,cAAM,OAAA,MAAM,EAAE,EAAR,CAAQ;oBACd,UAAC,MAAM,IAAK,OAAA,UAAU,CAAC,KAAK,CAAiB,MAAM,CAAC,MAAO,CAAC,UAAU,IAAI,cAAc,CAAC,EAA7E,CAA6E;iBAC5F;aACJ;SACJ,CAAC;IACN,CAAC;IA1BQ,OAAO;QADnB,8BAAW,EAAE;OACD,OAAO,CA2BnB;IAAD,cAAC;CA3BD,AA2BC,IAAA;AA3BY,0BAAO","file":"../index.js","sourcesContent":["// import * as path from 'path';\r\nimport { IDynamicTaskOption, Operation, IAsserts, IDynamicTasks, dynamicTask } from 'development-core';\r\n// import * as chalk from 'chalk';\r\nconst cache = require('gulp-cached');\r\nconst sourcemaps = require('gulp-sourcemaps');\r\nconst uglify = require('gulp-uglify');\r\nconst babel = require('gulp-babel');\r\n\r\n\r\n/**\r\n * js assert task optin.\r\n * \r\n * @export\r\n * @interface IJsTaskOption\r\n * @extends {IAsserts}\r\n */\r\nexport interface IJsTaskOption extends IAsserts {\r\n\r\n    /**\r\n     * babel 6 option.\r\n     * \r\n     * @type {*}\r\n     * @memberOf IJsTaskOption\r\n     */\r\n    babelOption?: any;\r\n\r\n    /**\r\n     * sourceMaps path.\r\n     * \r\n     * @type {string}\r\n     * @memberOf IJsTaskOption\r\n     */\r\n    sourceMaps?: string;\r\n}\r\n\r\n@dynamicTask()\r\nexport class JsTasks implements IDynamicTasks {\r\n    tasks(): IDynamicTaskOption[] {\r\n        return [\r\n            {\r\n                name: 'jscompile',\r\n                oper: Operation.build,\r\n                watch: true,\r\n                pipes: [\r\n                    () => cache('javascript'),\r\n                    () => sourcemaps.init(),\r\n                    (config) => babel((<IJsTaskOption>config.option).babelOption || { presets: ['es2015'] }),\r\n                    (config) => sourcemaps.write((<IJsTaskOption>config.option).sourceMaps || './sourcemaps')\r\n                ]\r\n            },\r\n            {\r\n                name: 'jscompile',\r\n                oper: Operation.release | Operation.deploy,\r\n                pipes: [\r\n                    () => cache('javascript'),\r\n                    () => sourcemaps.init(),\r\n                    (config) => babel((<IJsTaskOption>config.option).babelOption || { presets: ['es2015'] }),\r\n                    () => uglify(),\r\n                    (config) => sourcemaps.write((<IJsTaskOption>config.option).sourceMaps || './sourcemaps')\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n}\r\n"]}