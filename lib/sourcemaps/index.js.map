{"version":3,"sources":["index.js","index.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","_typeof","decorate","i","defineProperty","__metadata","k","v","metadata","development_core_1","require","cache","sourcemaps","uglify","babel","JsTasks","_classCallCheck","this","_createClass","value","name","oper","Operation","build","watch","pipes","init","config","option","babelOption","presets","write","sourceMaps","release","deploy","dynamicTask","exports"],"mappings":"AAAA,+kBACIA,WAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,YAAnB,mBAAOQ,SAAP,YAAAC,QAAOD,WAAoD,kBAArBA,SAAQE,SAAyBL,EAAIG,QAAQE,SAASb,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIW,GAAId,EAAWO,OAAS,EAAGO,GAAK,EAAGA,KAASV,EAAIJ,EAAWc,MAAIN,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOM,eAAed,EAAQC,EAAKM,GAAIA,GAE5DQ,WAA0C,SAAUC,EAAGC,GANvDnB,GAAc,YAAdA,mBAAAA,SAAAA,YAAAA,QAAAA,WAAoDC,kBAAzBD,SAAeoB,SAAsBlB,MAAQC,SAA9BiB,SAAyCF,EAAAC,ICAvFE,mBAAAC,QAAoF,oBAE9EC,MAAQD,QAAQ,eAChBE,WAAaF,QAAQ,mBACrBG,OAASH,QAAQ,eACjBI,MAAQJ,QAAQ,cA8BtBK,QAAAA,WAAA,QAAAA,KAAAC,gBAAAC,KAAAF,GAAA,MAAAG,cAAAH,IAAAxB,IAAA,QAAA4B,MAAA,WAEQ,QAEQC,KAAM,YACNC,KAAMZ,mBAAAa,UAAUC,MAChBC,OAAO,EACPC,OACI,WAAA,MAAMd,OAAM,eACZ,WAAA,MAAMC,YAAWc,QACjB,SAACC,GAAD,MAAYb,OAAsBa,EAAOC,OAAQC,cAAiBC,SAAU,aAC5E,SAACH,GAAD,MAAYf,YAAWmB,MAAsBJ,EAAOC,OAAQI,YAAc,oBAI9EZ,KAAM,YACNC,KAAMZ,mBAAAa,UAAUW,QAAUxB,mBAAAa,UAAUY,OACpCT,OACI,WAAA,MAAMd,OAAM,eACZ,WAAA,MAAMC,YAAWc,QACjB,SAACC,GAAD,MAAYb,OAAsBa,EAAOC,OAAQC,cAAiBC,SAAU,aAC5E,WAAA,MAAMjB,WACN,SAACc,GAAD,MAAYf,YAAWmB,MAAsBJ,EAAOC,OAAQI,YAAc,wBAtB9FjB,IADAA,SAAA3B,YAACqB,mBAAA0B,YAIW9B,WAWA,yBACIe,SAfHgB,QAAArB,QAAOA","file":"../index.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nconst development_core_1 = require('development-core');\nconst cache = require('gulp-cached');\nconst sourcemaps = require('gulp-sourcemaps');\nconst uglify = require('gulp-uglify');\nconst babel = require('gulp-babel');\nlet JsTasks = class JsTasks {\n    tasks() {\n        return [\n            {\n                name: 'jscompile',\n                oper: development_core_1.Operation.build,\n                watch: true,\n                pipes: [\n                        () => cache('javascript'),\n                        () => sourcemaps.init(),\n                        (config) => babel(config.option.babelOption || { presets: ['es2015'] }),\n                        (config) => sourcemaps.write(config.option.sourceMaps || './sourcemaps')\n                ]\n            },\n            {\n                name: 'jscompile',\n                oper: development_core_1.Operation.release | development_core_1.Operation.deploy,\n                pipes: [\n                        () => cache('javascript'),\n                        () => sourcemaps.init(),\n                        (config) => babel(config.option.babelOption || { presets: ['es2015'] }),\n                        () => uglify(),\n                        (config) => sourcemaps.write(config.option.sourceMaps || './sourcemaps')\n                ]\n            }\n        ];\n    }\n};\nJsTasks = __decorate([\n    development_core_1.dynamicTask, \n    __metadata('design:paramtypes', [])\n], JsTasks);\nexports.JsTasks = JsTasks;\n","// import * as path from 'path';\r\nimport { IDynamicTaskOption, Operation, IAsserts, IDynamicTasks, dynamicTask } from 'development-core';\r\n// import * as chalk from 'chalk';\r\nconst cache = require('gulp-cached');\r\nconst sourcemaps = require('gulp-sourcemaps');\r\nconst uglify = require('gulp-uglify');\r\nconst babel = require('gulp-babel');\r\n\r\n\r\n/**\r\n * js assert task optin.\r\n * \r\n * @export\r\n * @interface IJsTaskOption\r\n * @extends {IAsserts}\r\n */\r\nexport interface IJsTaskOption extends IAsserts {\r\n\r\n    /**\r\n     * babel 6 option.\r\n     * \r\n     * @type {*}\r\n     * @memberOf IJsTaskOption\r\n     */\r\n    babelOption?: any;\r\n\r\n    /**\r\n     * sourceMaps path.\r\n     * \r\n     * @type {string}\r\n     * @memberOf IJsTaskOption\r\n     */\r\n    sourceMaps?: string;\r\n}\r\n\r\n@dynamicTask\r\nexport class JsTasks implements IDynamicTasks {\r\n    tasks(): IDynamicTaskOption[] {\r\n        return [\r\n            {\r\n                name: 'jscompile',\r\n                oper: Operation.build,\r\n                watch: true,\r\n                pipes: [\r\n                    () => cache('javascript'),\r\n                    () => sourcemaps.init(),\r\n                    (config) => babel((<IJsTaskOption>config.option).babelOption || { presets: ['es2015'] }),\r\n                    (config) => sourcemaps.write((<IJsTaskOption>config.option).sourceMaps || './sourcemaps')\r\n                ]\r\n            },\r\n            {\r\n                name: 'jscompile',\r\n                oper: Operation.release | Operation.deploy,\r\n                pipes: [\r\n                    () => cache('javascript'),\r\n                    () => sourcemaps.init(),\r\n                    (config) => babel((<IJsTaskOption>config.option).babelOption || { presets: ['es2015'] }),\r\n                    () => uglify(),\r\n                    (config) => sourcemaps.write((<IJsTaskOption>config.option).sourceMaps || './sourcemaps')\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n}\r\n"]}