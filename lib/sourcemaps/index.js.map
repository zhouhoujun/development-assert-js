{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"../index.js","sourcesContent":["// import * as path from 'path';\r\nimport { ITaskInfo, ITaskContext, IAssertDist, Pipe, task, PipeTask, IDynamicTaskOption, Operation, IAsserts, IDynamicTasks, dynamicTask } from 'development-core';\r\nimport { Gulp } from 'gulp';\r\nimport * as _ from 'lodash';\r\n// import * as chalk from 'chalk';\r\nconst cache = require('gulp-cached');\r\nconst sourcemaps = require('gulp-sourcemaps');\r\nconst uglify = require('gulp-uglify');\r\nconst babel = require('gulp-babel');\r\n\r\n\r\n/**\r\n * js assert task optin.\r\n * \r\n * @export\r\n * @interface IJsTaskOption\r\n * @extends {IAsserts}\r\n */\r\nexport interface IJsTaskOption extends IAsserts {\r\n\r\n    /**\r\n     * babel 6 option.\r\n     * \r\n     * @type {*}\r\n     * @memberOf IJsTaskOption\r\n     */\r\n    babelOption?: any;\r\n\r\n    /**\r\n     * sourceMaps path.\r\n     * \r\n     * @type {string | boolean}\r\n     * @memberOf IJsTaskOption\r\n     */\r\n    sourceMaps?: string | boolean;\r\n\r\n    /**\r\n     * js option.\r\n     * \r\n     * @type {boolean}\r\n     * @memberof IJsTaskOption\r\n     */\r\n    uglify?: boolean;\r\n}\r\n\r\n\r\n@task({\r\n    oper: Operation.default | Operation.autoWatch\r\n})\r\nexport class JsCompile extends PipeTask {\r\n    constructor(info: ITaskInfo) {\r\n        super(info)\r\n    }\r\n\r\n    getInfo() {\r\n        this.info.name = this.info.name || 'jscompile';\r\n        return this.info;\r\n    }\r\n\r\n\r\n    pipes(ctx: ITaskContext, dist: IAssertDist, gulp?: Gulp): Pipe[] {\r\n        let option = ctx.option as IJsTaskOption;\r\n        let pipes: Pipe[] = [\r\n            () => cache('javascript'),\r\n            () => sourcemaps.init(),\r\n            (config) => babel((<IJsTaskOption>config.option).babelOption || { presets: ['es2015'] }),\r\n        ];\r\n\r\n        pipes = pipes.concat(super.pipes(ctx, dist, gulp));\r\n        if (option.uglify) {\r\n            pipes.splice(0, 0, {\r\n                oper: Operation.deploy | Operation.release,\r\n                toTransform: (ctx) => _.isBoolean(option.uglify) ? uglify() : uglify(option.uglify)\r\n            });\r\n        }\r\n\r\n        if (option.sourceMaps !== false) {\r\n            let mappath = (_.isBoolean(option.sourceMaps) || !option.sourceMaps) ? './sourcemaps' : option.sourceMaps;\r\n            pipes.push((ctx) => sourcemaps.write(mappath));\r\n        }\r\n        return pipes;\r\n    }\r\n\r\n}\r\n\r\n// @dynamicTask()\r\n// export class JsTasks implements IDynamicTasks {\r\n//     tasks(): IDynamicTaskOption[] {\r\n//         return [\r\n//             {\r\n//                 name: 'jscompile',\r\n//                 oper: Operation.build,\r\n//                 watch: true,\r\n//                 pipes: [\r\n//                     () => cache('javascript'),\r\n//                     () => sourcemaps.init(),\r\n//                     (config) => babel((<IJsTaskOption>config.option).babelOption || { presets: ['es2015'] }),\r\n//                     (config) => sourcemaps.write((<IJsTaskOption>config.option).sourceMaps || './sourcemaps')\r\n//                 ]\r\n//             },\r\n//             {\r\n//                 name: 'jscompile',\r\n//                 oper: Operation.release | Operation.deploy,\r\n//                 pipes: [\r\n//                     () => cache('javascript'),\r\n//                     () => sourcemaps.init(),\r\n//                     (config) => babel((<IJsTaskOption>config.option).babelOption || { presets: ['es2015'] }),\r\n//                     () => uglify(),\r\n//                     (config) => sourcemaps.write((<IJsTaskOption>config.option).sourceMaps || './sourcemaps')\r\n//                 ]\r\n//             }\r\n//         ];\r\n//     }\r\n// }\r\n"]}